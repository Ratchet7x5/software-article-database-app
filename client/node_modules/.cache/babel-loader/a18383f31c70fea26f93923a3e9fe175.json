{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun\\\\Documents\\\\GitHub\\\\cise-a1b\\\\Assignment-1B\\\\client\\\\src\\\\components\\\\Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getAllPractices } from \"../services/practiceservice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = _ref => {\n  _s();\n\n  let {\n    setSelectedPractice\n  } = _ref;\n  const [practices, setPractices] = useState([]);\n  useEffect(() => {\n    getAllPractices().then(practices => setPractices(practices));\n  }, []);\n\n  const renderPracticeItems = SEPractices => SEPractices.map(SEPractice => /*#__PURE__*/_jsxDEV(\"option\", {\n    children: SEPractice.practice\n  }, SEPractice._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this));\n\n  const handleDropdownChange = e => {\n    setSelectedPractice(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleDropdownChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an SE Practice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), renderPracticeItems(practices)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"iz1TYHSg/TN8sv9HY7NxpNgz2cA=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useEffect","useState","getAllPractices","Dropdown","setSelectedPractice","practices","setPractices","then","renderPracticeItems","SEPractices","map","SEPractice","practice","_id","handleDropdownChange","e","target","value"],"sources":["C:/Users/Tarun/Documents/GitHub/cise-a1b/Assignment-1B/client/src/components/Dropdown.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAllPractices } from \"../services/practiceservice\";\r\n\r\nconst Dropdown = ({ setSelectedPractice }) => {\r\n  const [practices, setPractices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPractices().then((practices) => setPractices(practices));\r\n  }, []);\r\n\r\n  const renderPracticeItems = (SEPractices) =>\r\n    SEPractices.map((SEPractice) => (\r\n      <option key={SEPractice._id}>{SEPractice.practice}</option>\r\n    ));\r\n\r\n  const handleDropdownChange = (e) => {\r\n    setSelectedPractice(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <select onChange={handleDropdownChange}>\r\n        <option value=\"\">Select an SE Practice</option>\r\n        {renderPracticeItems(practices)}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\nexport default Dropdown;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;AAEA,MAAMC,QAAQ,GAAG,QAA6B;EAAA;;EAAA,IAA5B;IAAEC;EAAF,CAA4B;EAC5C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACdE,eAAe,GAAGK,IAAlB,CAAwBF,SAAD,IAAeC,YAAY,CAACD,SAAD,CAAlD;EACD,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMG,mBAAmB,GAAIC,WAAD,IAC1BA,WAAW,CAACC,GAAZ,CAAiBC,UAAD,iBACd;IAAA,UAA8BA,UAAU,CAACC;EAAzC,GAAaD,UAAU,CAACE,GAAxB;IAAA;IAAA;IAAA;EAAA,QADF,CADF;;EAKA,MAAMC,oBAAoB,GAAIC,CAAD,IAAO;IAClCX,mBAAmB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;EACD,CAFD;;EAIA,oBACE;IAAA,uBACE;MAAQ,QAAQ,EAAEH,oBAAlB;MAAA,wBACE;QAAQ,KAAK,EAAC,EAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGN,mBAAmB,CAACH,SAAD,CAFtB;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAxBD;;GAAMF,Q;;KAAAA,Q;AAyBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}