{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun\\\\Documents\\\\GitHub\\\\cise-a1b\\\\Assignment-1B\\\\client\\\\src\\\\components\\\\EvidenceTable.js\",\n    _s = $RefreshSig$();\n\nimport React\n/*, { useMemo }*/\nfrom \"react\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = _ref => {\n  _s();\n\n  let {\n    selectedPractice,\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 3\n    }\n  }, useSortBy, usePagination);\n  console.log(pageSize);\n\n  const displayTable = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: \"<<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: \">>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          min: 1,\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: [5, 10, 15].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const displaySelectedTable = () => {\n    switch (selectedPractice) {\n      case \"TDD\":\n        return displayTable();\n\n      case \"Mob programming\":\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No articles found for Mob programming.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No table selected. Please select an SE Practice from the dropdown.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this);\n    }\n  }; // Render Data Table UI\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displaySelectedTable()\n  }, void 0, false);\n};\n\n_s(Table, \"D22Ofs1Yce1J/nL7doq0AZSyYNc=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useTable","useSortBy","usePagination","Table","selectedPractice","columns","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","console","log","displayTable","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","width","displaySelectedTable"],"sources":["C:/Users/Tarun/Documents/GitHub/cise-a1b/Assignment-1B/client/src/components/EvidenceTable.js"],"sourcesContent":["import React/*, { useMemo }*/ from \"react\";\r\nimport { useTable, useSortBy, usePagination } from \"react-table\";\r\n\r\nconst Table = ({ selectedPractice, columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 3 },\r\n    },\r\n\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  console.log(pageSize);\r\n\r\n  const displayTable = () => (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                // Add the sorting props to control sorting. For this example\r\n                // we can add them into the header props\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                  {/* Add a sort direction indicator */}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" ðŸ”½\"\r\n                        : \" ðŸ”¼\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {/* Pagination */}\r\n      <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </button>\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {\"<\"}\r\n        </button>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {\">\"}\r\n        </button>\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </button>\r\n        <span>\r\n          Page\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>\r\n        </span>\r\n        <span>\r\n          | Go to page:\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            min={1}\r\n            onChange={(e) => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n              gotoPage(page);\r\n            }}\r\n            style={{ width: \"100px\" }}\r\n          />\r\n        </span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[5, 10, 15].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const displaySelectedTable = () => {\r\n    switch (selectedPractice) {\r\n      case \"TDD\":\r\n        return displayTable();\r\n      case \"Mob programming\":       \r\n       return (\r\n        <h3>\r\n            No articles found for Mob programming.\r\n        </h3>\r\n      );\r\n      default:\r\n        return (\r\n          <h3>\r\n            No table selected. Please select an SE Practice from the dropdown.\r\n          </h3>\r\n        );\r\n    }\r\n  };\r\n\r\n  // Render Data Table UI\r\n  return <>{displaySelectedTable()}</>;\r\n};\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module"}